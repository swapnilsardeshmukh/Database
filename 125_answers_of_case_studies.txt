Questions-----

1. List all the columns of the Salespeople table. 
mysql> select distinct  column_name from information_schema.columns where table_name='salespeople';
+-------------+
| column_name |
+-------------+
| snum        |
| sname       |
| city        |
| comm        |
+-------------+
4 rows in set (0.00 sec)

2. List all customers with a rating of 100. 
mysql> select * from customers where rating=100;
+------+---------+--------+--------+------+
| cnum | cname   | city   | rating | snum |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 |  101 |
| 2006 | Clemens | London |    100 |  101 |
| 2007 | Pereira | Rome   |    100 |  104 |
+------+---------+--------+--------+------+
3 rows in set (0.00 sec)

3. Find all records in the Customer table with NULL values in the city column. 
mysql> select * from customers where city is null;
+------+-------+------+--------+------+
| cnum | cname | city | rating | snum |
+------+-------+------+--------+------+
| 2010 | rani  | NULL |    100 |  101 |
+------+-------+------+--------+------+
1 row in set (0.00 sec)

4. Find the largest order taken by each salesperson on each date. 

mysql> select onum,max(amt),odate,snum from orders group by snum,odate;
+------+----------+------------+------+
| onum | max(amt) | odate      | snum |
+------+----------+------------+------+
| 3003 |   767.19 | 1996-10-03 | 1001 |
| 3008 |     4723 | 1996-10-05 | 1001 |
| 3011 |  9891.88 | 1996-10-06 | 1001 |
| 3005 |  5160.45 | 1996-10-03 | 1002 |
| 3010 |  1309.95 | 1996-10-06 | 1002 |
| 3007 |  1713.23 | 1996-10-04 | 1003 |
| 3002 |   1900.1 | 1996-10-03 | 1004 |
| 3001 |  1098.16 | 1996-10-03 | 1007 |
+------+----------+------------+------+
8 rows in set (0.00 sec)

5. Arrange the Orders table by descending customer number. 


mysql> select * from orders order by cnum desc;
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1996-10-03 | 2008 | 1007 |
| 3006 | 1098.16 | 1996-10-03 | 2008 | 1007 |
| 3002 |  1900.1 | 1996-10-03 | 2007 | 1004 |
| 3008 |    4723 | 1996-10-05 | 2006 | 1001 |
| 3011 | 9891.88 | 1996-10-06 | 2006 | 1001 |
| 3010 | 1309.95 | 1996-10-06 | 2004 | 1002 |
| 3005 | 5160.45 | 1996-10-03 | 2003 | 1002 |
| 3009 | 1713.23 | 1996-10-04 | 2002 | 1003 |
| 3007 |   75.75 | 1996-10-04 | 2002 | 1003 |
| 3003 |  767.19 | 1996-10-03 | 2001 | 1001 |
+------+---------+------------+------+------+
10 rows in set (0.00 sec)

6. Find which salespeople currently have orders in the Orders table. 

mysql> select distinct s.sname from salespeople s join orders o on s.snum=o.snum
;
+---------+
| sname   |
+---------+
| peel    |
| serres  |
| axelrod |
| motika  |
| rifkin  |
+---------+
5 rows in set (0.00 sec)


7. List names of all customers matched with the salespeople serving them. 

mysql> select  c.cname,s.sname from salespeople s join customers c on s.snum=c.s
num;
+----------+---------+
| cname    | sname   |
+----------+---------+
| hoffman  | peel    |
| clemens  | peel    |
| liu      | serres  |
| grass    | serres  |
| giovanni | axelrod |
| pereira  | motika  |
| cisneros | rifkin  |
+----------+---------+
7 rows in set (0.00 sec)

8. Find the names and numbers of all salespeople who had more than one customer. 

mysql> select sname,s.snum from salespeople s join customers c on s.snum=c.snum group by snum having count(cnum) >1;
+--------+------+
| sname  | snum |
+--------+------+
| peel   | 1001 |
| serres | 1002 |
+--------+------+
2 rows in set (0.02 sec)


9. Count the orders of each of the salespeople and output the results in descending order.

mysql> select sname,s.snum,count(onum) total_order  from salespeople s join orders o on s.snum=o.snum group by snum order by total_order desc;
+---------+------+-------------+
| sname   | snum | total_order |
+---------+------+-------------+
| peel    | 1001 |           3 |
| axelrod | 1003 |           2 |
| rifkin  | 1007 |           2 |
| serres  | 1002 |           2 |
| motika  | 1004 |           1 |
+---------+------+-------------+
5 rows in set (0.00 sec)

10. List the Customer table if and only if one or more of the customers in the Customer table are located in San Jose.

mysql> select * from customers where exists(select * from customers where city='san jose');
+------+----------+----------+--------+------+
| cnum | cname    | city     | rating | snum |
+------+----------+----------+--------+------+
| 2001 | hoffman  | london   |    100 | 1001 |
| 2002 | giovanni | rome     |    200 | 1003 |
| 2003 | liu      | san jose |    200 | 1002 |
| 2004 | grass    | berlin   |    300 | 1002 |
| 2006 | clemens  | london   |    100 | 1001 |
| 2007 | pereira  | rome     |    100 | 1004 |
| 2008 | cisneros | san jose |    300 | 1007 |
+------+----------+----------+--------+------+

11. Match salespeople to customers according to what city they lived in.

mysql> select s.sname,cname,s.city from salespeople s join customers c on s.city=c.city;
+--------+----------+----------+
| sname  | cname    | city     |
+--------+----------+----------+
| peel   | hoffman  | london   |
| motika | hoffman  | london   |
| fran   | hoffman  | london   |
| serres | liu      | san jose |
| peel   | clemens  | london   |
| motika | clemens  | london   |
| fran   | clemens  | london   |
| serres | cisneros | san jose |
+--------+----------+----------+
8 rows in set (0.01 sec)

12. Find the largest order taken by each salesperson.

mysql> select snum,max(amt) largest_order from orders group by snum;
+------+--------------------+
| snum | largest_order      |
+------+--------------------+
| 1001 |    9891.8798828125 |
| 1002 |    5160.4501953125 |
| 1003 |   1713.22998046875 |
| 1004 | 1900.0999755859375 |
| 1007 | 1098.1600341796875 |
+------+--------------------+
5 rows in set (0.00 sec)

13. Find customers in San Jose who have a rating above 200.

mysql> select * from customers where city='san jose' and rating>200;
+------+----------+----------+--------+------+
| cnum | cname    | city     | rating | snum |
+------+----------+----------+--------+------+
| 2008 | cisneros | san jose |    300 | 1007 |
+------+----------+----------+--------+------+
1 row in set (0.00 sec)

14. List the names and commissions of all salespeople in London.

mysql> select sname,comm from salespeople where city='london';
+--------+---------+
| sname  | comm    |
+--------+---------+
| peel   | 0.12000 |
| motika | 0.11000 |
| fran   | 0.26000 |
+--------+---------+
3 rows in set (0.00 sec)

15. List all the orders of salesperson Motika from the Orders table.

mysql> select onum,sname from orders o join salespeople s on s.snum=o.snum where s.sname='motika';
+------+--------+
| onum | sname  |
+------+--------+
| 3002 | motika |
+------+--------+
1 row in set (0.01 sec)

16. Find all customers with orders on October 3.

mysql> select * from customers c join orders o on c.cnum=o.cnum where odate='1996-10-03;                                                              
+------+----------+----------+--------+------+------+---------+------------+------+------+
| cnum | cname    | city     | rating | snum | onum | amt     | odate      | cnum | snum |
+------+----------+----------+--------+------+------+---------+------------+------+------+
| 2008 | cisneros | san jose |    300 | 1007 | 3001 |   18.69 | 1996-10-03 | 2008 | 1007 |
| 2007 | pereira  | rome     |    100 | 1004 | 3002 |  1900.1 | 1996-10-03 | 2007 | 1004 |
| 2001 | hoffman  | london   |    100 | 1001 | 3003 |  767.19 | 1996-10-03 | 2001 | 1001 |
| 2003 | liu      | san jose |    200 | 1002 | 3005 | 5160.45 | 1996-10-03 | 2003 | 1002 |
| 2008 | cisneros | san jose |    300 | 1007 | 3006 | 1098.16 | 1996-10-03 | 2008 | 1007 |
+------+----------+----------+--------+------+------+---------+------------+------+------+
5 rows in set (0.00 sec)

17. Give the sums of the amounts from the Orders table, grouped by date, eliminating all those dates where the SUM was not at least 2000.00 above the MAX amount.

mysql> select odate, sum(amt) total from orders group by odate having total>2000;
+------------+--------------------+
| odate      | total              |
+------------+--------------------+
| 1996-10-03 |  8944.590208053589 |
| 1996-10-05 |               4723 |
| 1996-10-06 | 11201.829833984375 |
+------------+--------------------+
3 rows in set (0.00 sec)

18. Select all orders that had amounts that were greater than at least one of the orders from October 6.

mysql> select odate,amt from orders where amt > any(select amt from orders where odate ='1996-10-6');                                               +------------+---------+
| odate      | amt     |
+------------+---------+
| 1996-10-03 |  1900.1 |
| 1996-10-03 | 5160.45 |
| 1996-10-05 |    4723 |
| 1996-10-04 | 1713.23 |
| 1996-10-06 | 9891.88 |
+------------+---------+
5 rows in set (0.00 sec)

19. Write a query that uses the EXISTS operator to extract all salespeople who have customers with a rating of 300.

mysql> select * from salespeople s where exists(select * from customers c where (s.snum=c.snum and rating=300));
+------+--------+-----------+---------+
| snum | sname  | city      | comm    |
+------+--------+-----------+---------+
| 1002 | serres | san jose  | 0.13000 |
| 1007 | rifkin | barcelona | 0.15000 |
+------+--------+-----------+---------+
2 rows in set (0.01 sec)

20. Find all pairs of customers having the same rating.

mysql> select s.cname,c.cname,c.rating from customers c join customers s on c.rating=s.rating where c.cnum!=s.cnum;
+----------+----------+--------+
| cname    | cname    | rating |
+----------+----------+--------+
| hoffman  | clemens  |    100 |
| hoffman  | pereira  |    100 |
| giovanni | liu      |    200 |
| liu      | giovanni |    200 |
| grass    | cisneros |    300 |
| clemens  | hoffman  |    100 |
| clemens  | pereira  |    100 |
| pereira  | hoffman  |    100 |
| pereira  | clemens  |    100 |
| cisneros | grass    |    300 |
+----------+----------+--------+
10 rows in set (0.00 sec)

21. Find all customers whose CNUM is 1000 above the SNUM of Serres.

mysql> select cnum,cname from customers c where ( select snum from salespeople s where sname='serres' and c.cnum >= 1000+s.snum);
+------+----------+
| cnum | cname    |
+------+----------+
| 2002 | giovanni |
| 2003 | liu      |
| 2004 | grass    |
| 2006 | clemens  |
| 2007 | pereira  |
| 2008 | cisneros |
+------+----------+
6 rows in set (0.00 sec)


22. Give the salespeople’s commissions as percentages instead of decimal numbers.

mysql> select snum,sname,concat(comm*100,'%') comm_percent from salespeople;
+------+---------+--------------+
| snum | sname   | comm_percent |
+------+---------+--------------+
| 1001 | peel    | 12.00000%    |
| 1002 | serres  | 13.00000%    |
| 1003 | axelrod | 10.00000%    |
| 1004 | motika  | 11.00000%    |
| 1005 | fran    | 26.00000%    |
| 1007 | rifkin  | 15.00000%    |
+------+---------+--------------+
6 rows in set (0.00 sec)

23. Find the largest order taken by each salesperson on each date, eliminating those MAX orders which are less than $3000.00 in value.

mysql> select snum,odate,max(amt) max_order from orders group by snum,odate having max_order>3000;
+------+------------+-----------+
| snum | odate      | max_order |
+------+------------+-----------+
| 1001 | 1996-10-05 |      4723 |
| 1001 | 1996-10-06 |   9891.88 |
| 1002 | 1996-10-03 |   5160.45 |
+------+------------+-----------+
3 rows in set (0.00 sec)

24. List the largest orders for October 3, for each salesperson.

mysql> select snum,max(amt) largest_oreder from orders where odate='1996-10-03' group by snum;
+------+--------------------+
| snum | largest_oreder     |
+------+--------------------+
| 1001 |  767.1900024414062 |
| 1002 |    5160.4501953125 |
| 1004 | 1900.0999755859375 |
| 1007 | 1098.1600341796875 |
+------+--------------------+
4 rows in set (0.00 sec)


25. Find all customers located in cities where Serres (SNUM 1002) has customers.

mysql> select * from customers where city in (select city from customers where snum=1002);
+------+----------+----------+--------+------+
| cnum | cname    | city     | rating | snum |
+------+----------+----------+--------+------+
| 2003 | liu      | san jose |    200 | 1002 |
| 2004 | grass    | berlin   |    300 | 1002 |
| 2008 | cisneros | san jose |    300 | 1007 |
+------+----------+----------+--------+------+
3 rows in set (0.00 sec)

26. Select all customers with a rating above 200.00.

mysql> select * from customers where rating>200;
+------+----------+----------+--------+------+
| cnum | cname    | city     | rating | snum |
+------+----------+----------+--------+------+
| 2004 | grass    | berlin   |    300 | 1002 |
| 2008 | cisneros | san jose |    300 | 1007 |
+------+----------+----------+--------+------+
2 rows in set (0.00 sec)

27. Count the number of salespeople currently listing orders in the Orders table.

mysql> select count(distinct s.snum) from salespeople s join orders o on s.snum=o.snum;
+------------------------+
| count(distinct s.snum) |
+------------------------+
|                      5 |
+------------------------+
1 row in set (0.00 sec)

28. Write a query that produces all customers serviced by salespeople with a commission above 12%. Output the customer’s name and the salesperson’s rate of commission.

mysql> select cname,comm from customers c join salespeople s on c.snum=s.snum where (comm*100)>12;
+----------+---------+
| cname    | comm    |
+----------+---------+
| liu      | 0.13000 |
| grass    | 0.13000 |
| cisneros | 0.15000 |
+----------+---------+
3 rows in set (0.00 sec)

29. Find salespeople who have multiple customers.

mysql> select s.snum,sname from salespeople s join customers c on s.snum=c.snum group by snum having count(cnum) >1;
+------+--------+
| snum | sname  |
+------+--------+
| 1001 | peel   |
| 1002 | serres |
+------+--------+
2 rows in set (0.00 sec)

30. Find salespeople with customers located in their city.

mysql> select s.sname,cname,s.city from salespeople s join customers c on s.city=c.city and s.snum=c.snum;
+--------+---------+----------+
| sname  | cname   | city     |
+--------+---------+----------+
| peel   | hoffman | london   |
| serres | liu     | san jose |
| peel   | clemens | london   |
+--------+---------+----------+
3 rows in set (0.00 sec)

31. Find all salespeople whose name starts with ‘P’ and the fourth character is ‘l’.

mysql> select sname from salespeople where sname like 'p__l';
+-------+
| sname |
+-------+
| peel  |
+-------+
1 row in set (0.00 sec)

32. Write a query that uses a subquery to obtain all orders for the customer named Cisneros. Assume you do not know his customer number.

mysql> select * from orders where cnum =(select cnum from customers where cname='cisneros');
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1996-10-03 | 2008 | 1007 |
| 3006 | 1098.16 | 1996-10-03 | 2008 | 1007 |
+------+---------+------------+------+------+
2 rows in set (0.00 sec)

33. Find the largest orders for Serres and Rifkin.

select o.onum, max(o.amt) largest_order,s.sname from orders o join salespeople s on s.snum=o.snum group by s.sname having s.sname='serres' or s.sname='rifkin';

+------+---------------+--------+
| onum | largest_order | sname  |
+------+---------------+--------+
| 3001 |       1098.16 | rifkin |
| 3005 |       5160.45 | serres |
+------+---------------+--------+
2 rows in set (0.03 sec)

34. Extract the Salespeople table in the following order : SNUM, SNAME, COMMISSION, CITY.

mysql> select snum,sname,comm,city from salespeople; 
+------+---------+---------+-----------+
| snum | sname   | comm    | city      |
+------+---------+---------+-----------+
| 1001 | peel    | 0.12000 | london    |
| 1002 | serres  | 0.13000 | san jose  |
| 1003 | axelrod | 0.10000 | new york  |
| 1004 | motika  | 0.11000 | london    |
| 1005 | fran    | 0.26000 | london    |
| 1007 | rifkin  | 0.15000 | barcelona |
+------+---------+---------+-----------+
6 rows in set (0.00 sec)

35. Select all customers whose names fall in between ‘A’ and ‘G’ alphabetical range.

mysql> select cname from customers where cname regexp '^[a-g].*' order by cname;
+----------+
| cname    |
+----------+
| cisneros |
| clemens  |
| giovanni |
| grass    |
+----------+
4 rows in set (0.00 sec)

36. Select all the possible combinations of customers that you can assign.


37. Select all orders that are greater than the average for October 4.

mysql> select * from orders where amt>(select avg(amt) from orders where odate='1996-10-04' group by odate);
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3002 |  1900.1 | 1996-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1996-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1996-10-03 | 2008 | 1007 |
| 3008 |    4723 | 1996-10-05 | 2006 | 1001 |
| 3009 | 1713.23 | 1996-10-04 | 2002 | 1003 |
| 3010 | 1309.95 | 1996-10-06 | 2004 | 1002 |
| 3011 | 9891.88 | 1996-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+
7 rows in set (0.00 sec)

38. Write a select command using a corelated subquery that selects the names and numbers of all customers with ratings equal to the maximum for their city.

mysql> select cnum,cname,city from customers c where rating =(select max(rating) from customers where city=c.city);
+------+----------+----------+
| cnum | cname    | city     |
+------+----------+----------+
| 2001 | hoffman  | london   |
| 2002 | giovanni | rome     |
| 2004 | grass    | berlin   |
| 2006 | clemens  | london   |
| 2008 | cisneros | san jose |
+------+----------+----------+
5 rows in set (0.00 sec)

39. Write a query that totals the orders for each day and places the results in descending order.

mysql> select odate,sum(amt) total from orders group by odate order by total desc;
+------------+--------------------+
| odate      | total              |
+------------+--------------------+
| 1996-10-06 | 11201.829833984375 |
| 1996-10-03 |  8944.590208053589 |
| 1996-10-05 |               4723 |
| 1996-10-04 |   1788.97998046875 |
+------------+--------------------+
4 rows in set (0.00 sec)

40. Write a select command that produces the rating followed by the name of each customer in San Jose.

mysql> select rating,cname from customers where city='san jose';
+--------+----------+
| rating | cname    |
+--------+----------+
|    200 | liu      |
|    300 | cisneros |
+--------+----------+
2 rows in set (0.00 sec)

41. Find all orders with amounts smaller than any amount for a customer in San Jose.

mysql> select onum,amt from orders where amt < any(select amt from orders o join customers c on o.cnum=c.cnum and city='san jose');
+------+---------+
| onum | amt     |
+------+---------+
| 3001 |   18.69 |
| 3002 |  1900.1 |
| 3003 |  767.19 |
| 3006 | 1098.16 |
| 3007 |   75.75 |
| 3008 |    4723 |
| 3009 | 1713.23 |
| 3010 | 1309.95 |
+------+---------+
8 rows in set (0.00 sec)

42. Find all orders with above average amounts for their customers.

mysql> select onum,amt from orders o where amt>(select avg(amt) from orders where o.cnum=cnum);
+------+---------+
| onum | amt     |
+------+---------+
| 3006 | 1098.16 |
| 3009 | 1713.23 |
| 3011 | 9891.88 |
+------+---------+
3 rows in set (0.00 sec)

43. Write a query that selects the highest rating in each city.

mysql> select city,max(rating) from customers group by city;
+----------+-------------+
| city     | max(rating) |
+----------+-------------+
| berlin   |         300 |
| london   |         100 |
| rome     |         200 |
| san jose |         300 |
+----------+-------------+
4 rows in set (0.01 sec)

44. Write a query that calculates the amount of the salesperson’s commission on each order by a customer with a rating above 100.00.

mysql> select (comm*amt) from salespeople s join orders o join customers c on s.snum=o.snum and c.cnum = o.cnum where c.rating > 100;
+--------------------+
| (comm*amt)         |
+--------------------+
|              7.575 |
|   171.322998046875 |
|   670.858525390625 |
| 170.29349365234376 |
| 2.8035000801086425 |
| 164.72400512695313 |
+--------------------+
6 rows in set (0.00 sec)

45. Count the customers with ratings above San Jose’s average.

mysql> select count(cnum) from customers where rating >(select avg(rating)from customers where city='san jose');
+-------------+
| count(cnum) |
+-------------+
|           2 |
+-------------+
1 row in set (0.00 sec)

46. Write a query that produces all pairs of salespeople with themselves as well as duplicate rows with the order reversed.

mysql> select s1.snum,s1.sname,s2.snum,s2.sname from salespeople s1 join salespeople s2 order by s2.snum desc;
+------+---------+------+---------+
| snum | sname   | snum | sname   |
+------+---------+------+---------+
| 1005 | fran    | 1007 | rifkin  |
| 1001 | peel    | 1007 | rifkin  |
| 1007 | rifkin  | 1007 | rifkin  |
| 1002 | serres  | 1007 | rifkin  |
| 1003 | axelrod | 1007 | rifkin  |
| 1004 | motika  | 1007 | rifkin  |
| 1001 | peel    | 1005 | fran    |
| 1007 | rifkin  | 1005 | fran    |
| 1002 | serres  | 1005 | fran    |
| 1003 | axelrod | 1005 | fran    |
| 1004 | motika  | 1005 | fran    |
| 1005 | fran    | 1005 | fran    |
| 1003 | axelrod | 1004 | motika  |
| 1004 | motika  | 1004 | motika  |
| 1005 | fran    | 1004 | motika  |
| 1001 | peel    | 1004 | motika  |
| 1007 | rifkin  | 1004 | motika  |
| 1002 | serres  | 1004 | motika  |
| 1004 | motika  | 1003 | axelrod |
| 1005 | fran    | 1003 | axelrod |
| 1001 | peel    | 1003 | axelrod |
| 1007 | rifkin  | 1003 | axelrod |
| 1002 | serres  | 1003 | axelrod |
| 1003 | axelrod | 1003 | axelrod |
| 1001 | peel    | 1002 | serres  |
| 1007 | rifkin  | 1002 | serres  |
| 1002 | serres  | 1002 | serres  |
| 1003 | axelrod | 1002 | serres  |
| 1004 | motika  | 1002 | serres  |
| 1005 | fran    | 1002 | serres  |
| 1003 | axelrod | 1001 | peel    |
| 1004 | motika  | 1001 | peel    |
| 1005 | fran    | 1001 | peel    |
| 1001 | peel    | 1001 | peel    |
| 1007 | rifkin  | 1001 | peel    |
| 1002 | serres  | 1001 | peel    |
+------+---------+------+---------+
36 rows in set (0.00 sec)

47. Find all salespeople that are located in either Barcelona or London.

mysql> select * from salespeople where city='barcelona' or city='london';
OR
mysql> select * from salespeople where city in('barcelona','london'); 
+------+--------+-----------+---------+
| snum | sname  | city      | comm    |
+------+--------+-----------+---------+
| 1001 | peel   | london    | 0.12000 |
| 1004 | motika | london    | 0.11000 |
| 1005 | fran   | london    | 0.26000 |
| 1007 | rifkin | barcelona | 0.15000 |
+------+--------+-----------+---------+
4 rows in set (0.00 sec)

48. Find all salespeople with only one customer.

mysql> select snum from customers group by snum having count(cnum)=1;
+------+
| snum |
+------+
| 1003 |
| 1004 |
| 1007 |
+------+
3 rows in set (0.00 sec)


49. Write a query that joins the Customer table to itself to find all pairs of customers served by a single salesperson.


50. Write a query that will give you all orders for more than $1000.00

mysql> select * from orders where amt>1000;
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3002 |  1900.1 | 1996-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1996-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1996-10-03 | 2008 | 1007 |
| 3008 |    4723 | 1996-10-05 | 2006 | 1001 |
| 3009 | 1713.23 | 1996-10-04 | 2002 | 1003 |
| 3010 | 1309.95 | 1996-10-06 | 2004 | 1002 |
| 3011 | 9891.88 | 1996-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+
7 rows in set (0.00 sec)


51. Write a query that lists each order number followed by the name of the customer who made that order.

mysql> select onum,cname from orders o join customers c on o.cnum=c.cnum;
+------+----------+
| onum | cname    |
+------+----------+
| 3003 | hoffman  |
| 3007 | giovanni |
| 3009 | giovanni |
| 3005 | liu      |
| 3010 | grass    |
| 3008 | clemens  |
| 3011 | clemens  |
| 3002 | pereira  |
| 3001 | cisneros |
| 3006 | cisneros |
+------+----------+
10 rows in set (0.00 sec)

52. Write 2 queries that select all salespeople (by name and number) who have customers in their cities who they do not service, one using a join and one a corelated subquery. Which solution is  more elegant?

using join------
mysql> select s.snum,sname from salespeople s join customers c on s.city=c.city and c.snum !=s.snum group by s.snum,sname;
+------+--------+
| snum | sname  |
+------+--------+
| 1002 | serres |
| 1004 | motika |
| 1005 | fran   |
+------+--------+
3 rows in set (0.00 sec)

using corelated subquery------
mysql> select s.sname,s.snum from salespeople s where exists( select 1 from customers c where c.city=s.city and c.snum!= s.snum);
+--------+------+
| sname  | snum |
+--------+------+
| serres | 1002 |
| motika | 1004 |
| fran   | 1005 |
+--------+------+
3 rows in set (0.00 sec)

53. Write a query that selects all customers whose ratings are equal to or greater than ANY (in the SQL sense) of Serres’?

mysql> select rating,cnum from customers where rating in ( select rating from customers c join salespeople s on c.snum=s.snum where sname='serres'); 
+--------+------+
| rating | cnum |
+--------+------+
|    200 | 2002 |
|    200 | 2003 |
|    300 | 2004 |
|    300 | 2008 |
+--------+------+
4 rows in set (0.00 sec)

54. Write 2 queries that will produce all orders taken on October 3 or October 4.

mysql> select onum,odate from orders where odate in ('1996-10-03','1996-10-04');
OR
mysql> select onum,odate from orders where odate='1996-10-03'or  odate='1996-10-04';

+------+------------+
| onum | odate      |
+------+------------+
| 3001 | 1996-10-03 |
| 3002 | 1996-10-03 |
| 3003 | 1996-10-03 |
| 3005 | 1996-10-03 |
| 3006 | 1996-10-03 |
| 3007 | 1996-10-04 |
| 3009 | 1996-10-04 |
+------+------------+
7 rows in set (0.00 sec)

55. Write a query that produces all pairs of orders by a given customer. Name that customer and eliminate duplicates.

mysql> select cname,onum from orders o join customers c on o.cnum=c.cnum;
+----------+------+
| cname    | onum |
+----------+------+
| hoffman  | 3003 |
| giovanni | 3007 |
| giovanni | 3009 |
| liu      | 3005 |
| grass    | 3010 |
| clemens  | 3008 |
| clemens  | 3011 |
| pereira  | 3002 |
| cisneros | 3001 |
| cisneros | 3006 |
+----------+------+
10 rows in set (0.00 sec)

56. Find only those customers whose ratings are higher than every customer in Rome.

mysql> select cnum,cname,rating from customers where rating > all ( select rating from customers where city='rome');
+------+----------+--------+
| cnum | cname    | rating |
+------+----------+--------+
| 2004 | grass    |    300 |
| 2008 | cisneros |    300 |
+------+----------+--------+
2 rows in set (0.00 sec)


57. Write a query on the Customers table whose output will exclude all customers with a rating <=100.00, unless they are located in Rome.

mysql> select * from customers where rating >100 or city='rome';
+------+----------+----------+--------+------+
| cnum | cname    | city     | rating | snum |
+------+----------+----------+--------+------+
| 2002 | giovanni | rome     |    200 | 1003 |
| 2003 | liu      | san jose |    200 | 1002 |
| 2004 | grass    | berlin   |    300 | 1002 |
| 2007 | pereira  | rome     |    100 | 1004 |
| 2008 | cisneros | san jose |    300 | 1007 |
+------+----------+----------+--------+------+
5 rows in set (0.00 sec)

58. Find all rows from the Customers table for which the salesperson number is 1001.

mysql> select * from customers where snum=1001;
+------+---------+--------+--------+------+
| cnum | cname   | city   | rating | snum |
+------+---------+--------+--------+------+
| 2001 | hoffman | london |    100 | 1001 |
| 2006 | clemens | london |    100 | 1001 |
+------+---------+--------+--------+------+
2 rows in set (0.02 sec)

59. Find the total amount in Orders for each salesperson for whom this total is greater than the amount of the largest order in the table.

mysql> select snum,sum(amt) total_order from orders group by snum having total_order > (select max(amt) from orders);
+------+------------------+
| snum | total_order      |
+------+------------------+
| 1001 | 15382.0698852539 |
+------+------------------+
1 row in set (0.00 sec)

60. Write a query that selects all orders save those with zeroes or NULLs in the amount field.

mysql> select * from orders where amt is null or amt = 0;
+------+------+-------+------+------+
| onum | amt  | odate | cnum | snum |
+------+------+-------+------+------+
| 3012 |    0 | NULL  | NULL | NULL |
| 3013 | NULL | NULL  | NULL | NULL |
+------+------+-------+------+------+
2 rows in set (0.00 sec)

61. Produce all combinations of salespeople and customer names such that the former precedes the latter alphabetically, and the latter has a rating of less than 200.

mysql> select sname,cname,rating from salespeople s join customers c where rating < 200 order by cname,sname;
+---------+---------+--------+
| sname   | cname   | rating |
+---------+---------+--------+
| axelrod | clemens |    100 |
| fran    | clemens |    100 |
| motika  | clemens |    100 |
| peel    | clemens |    100 |
| rifkin  | clemens |    100 |
| serres  | clemens |    100 |
| axelrod | hoffman |    100 |
| fran    | hoffman |    100 |
| motika  | hoffman |    100 |
| peel    | hoffman |    100 |
| rifkin  | hoffman |    100 |
| serres  | hoffman |    100 |
| axelrod | pereira |    100 |
| fran    | pereira |    100 |
| motika  | pereira |    100 |
| peel    | pereira |    100 |
| rifkin  | pereira |    100 |
| serres  | pereira |    100 |
+---------+---------+--------+
18 rows in set (0.00 sec)

62. List all Salespeople’s names and the Commission they have earned.

mysql> select sname,(comm* sum(amt)) earned_comm,sum(amt) total from salespeople s join orders o where s.snum=o.snum group by o.snum;
+---------+------------------+------------------+
| sname   | earned_comm      | total            |
+---------+------------------+------------------+
| peel    | 1845.84838623047 | 15382.0698852539 |
| serres  | 841.152019042969 | 6470.40014648438 |
| axelrod | 178.897998046875 | 1788.97998046875 |
| motika  | 209.010997314453 | 1900.09997558594 |
| rifkin  | 167.527505207062 | 1116.85003471375 |
+---------+------------------+------------------+
5 rows in set (0.00 sec)

63. Write a query that produces the names and cities of all customers with the same rating as Hoffman. Write the query using Hoffman’s CNUM rather than his rating, so that it would still be
usable if his rating changed.

mysql> select cname,city from customers where rating=(select rating from custome
rs where cname='hoffman');
+---------+--------+
| cname   | city   |
+---------+--------+
| hoffman | london |
| clemens | london |
| pereira | rome   |
+---------+--------+
3 rows in set (0.00 sec)

64. Find all salespeople for whom there are customers that follow them in alphabetical order.

mysql> select sname,cname from salespeople s join customers c on s.snum=c.snum a
nd sname<cname;
+---------+----------+
| sname   | cname    |
+---------+----------+
| axelrod | giovanni |
| motika  | pereira  |
+---------+----------+
2 rows in set (0.00 sec)

65. Write a query that produces the names and ratings of all customers of all who have above average orders.

mysql> select c.snum,rating from customers c join orders o on c.snum=o.snum where amt > (select avg(amt) from orders);
+------+--------+
| snum | rating |
+------+--------+
| 1001 |    100 |
| 1001 |    100 |
| 1002 |    200 |
| 1002 |    300 |
| 1001 |    100 |
| 1001 |    100 |
+------+--------+
6 rows in set (0.00 sec)

66. Find the SUM of all purchases from the Orders table.
mysql> select sum(amt) from orders ;
+------------------+
| sum(amt)         |
+------------------+
| 26658.4000225067 |
+------------------+
1 row in set (0.00 sec)

67. Write a SELECT command that produces the order number, amount and date for all rows in the order table.

mysql> select onum,amt,odate from orders;
+------+---------+------------+
| onum | amt     | odate      |
+------+---------+------------+
| 3001 |   18.69 | 1996-10-03 |
| 3002 |  1900.1 | 1996-10-03 |
| 3003 |  767.19 | 1996-10-03 |
| 3005 | 5160.45 | 1996-10-03 |
| 3006 | 1098.16 | 1996-10-03 |
| 3007 |   75.75 | 1996-10-04 |
| 3008 |    4723 | 1996-10-05 |
| 3009 | 1713.23 | 1996-10-04 |
| 3010 | 1309.95 | 1996-10-06 |
| 3011 | 9891.88 | 1996-10-06 |
+------+---------+------------+
10 rows in set (0.00 sec)

68. Count the number of nonNULL rating fields in the Customers table (including repeats).

mysql> select count(rating) from customers where rating is not null;
+---------------+
| count(rating) |
+---------------+
|             7 |
+---------------+
1 row in set (0.00 sec)

69. Write a query that gives the names of both the salesperson and the customer for each order after the order number.

mysql> select onum,sname,cname from salespeople s join customers c join orders o on s.snum=c.snum and s.snum=o.snum group by onum;
+------+---------+----------+
| onum | sname   | cname    |
+------+---------+----------+
| 3001 | rifkin  | cisneros |
| 3002 | motika  | pereira  |
| 3003 | peel    | hoffman  |
| 3005 | serres  | liu      |
| 3006 | rifkin  | cisneros |
| 3007 | axelrod | giovanni |
| 3008 | peel    | hoffman  |
| 3009 | axelrod | giovanni |
| 3010 | serres  | liu      |
| 3011 | peel    | hoffman  |
+------+---------+----------+
10 rows in set (0.02 sec)

70. List the commissions of all salespeople servicing customers in London.

mysql> select distinct sname,comm from salespeople s join customers c on s.snum=c.snum where c.city='london';
+-------+---------+
| sname | comm    |
+-------+---------+
| peel  | 0.12000 |
+-------+---------+
1 row in set (0.00 sec)

71. Write a query using ANY or ALL that will find all salespeople who have no customers located in their city.

mysql> select * from salespeople s where s.city != all (select c.city from customers c);
+------+---------+-----------+---------+
| snum | sname   | city      | comm    |
+------+---------+-----------+---------+
| 1003 | axelrod | new york  | 0.10000 |
| 1007 | rifkin  | barcelona | 0.15000 |
+------+---------+-----------+---------+
2 rows in set (0.00 sec)

72. Write a query using the EXISTS operator that selects all salespeople with customers located in their cities who are not assigned to them.

mysql> select distinct sname from salespeople s join customers c on s.city=c.city where exists ( select * from customers where c.snum!=s.snum);
+--------+
| sname  |
+--------+
| motika |
| fran   |
| serres |
+--------+
3 rows in set (0.00 sec)

73. Write a query that selects all customers serviced by Peel or Motika. (Hint : The SNUM field relates the two tables to one another.)

mysql> select cname from customers c join salespeople s on c.snum=s.snum where sname in ('peel','motika');
+---------+
| cname   |
+---------+
| hoffman |
| clemens |
| pereira |
+---------+
3 rows in set (0.00 sec)

74. Count the number of salespeople registering orders for each day. (If a salesperson has more than one order on a given day, he or she should be counted only once.)

mysql> select odate,count(distinct o.snum) from orders o join salespeople s on s
.snum=o.snum group by odate;
+------------+------------------------+
| odate      | count(distinct o.snum) |
+------------+------------------------+
| 1996-10-03 |                      4 |
| 1996-10-04 |                      1 |
| 1996-10-05 |                      1 |
| 1996-10-06 |                      2 |
+------------+------------------------+
4 rows in set (0.02 sec)

75. Find all orders attributed to salespeople in London.

mysql> select onum from orders o join salespeople s on o.snum=s.snum where city='london';
+------+
| onum |
+------+
| 3003 |
| 3008 |
| 3011 |
| 3002 |
+------+
4 rows in set (0.00 sec)

76. Find all orders by customers not located in the same cities as their salespeople.

mysql> select onum,cname,sname,c.city cust_city,s.city sal_city
    -> from orders o join customers c join salespeople s
    -> on s.snum=o.snum and c.cnum= o.cnum and c.snum =s.snum
    -> where s.city!=c.city;
+------+----------+---------+-----------+-----------+
| onum | cname    | sname   | cust_city | sal_city  |
+------+----------+---------+-----------+-----------+
| 3010 | grass    | serres  | berlin    | san jose  |
| 3007 | giovanni | axelrod | rome      | new york  |
| 3009 | giovanni | axelrod | rome      | new york  |
| 3002 | pereira  | motika  | rome      | london    |
| 3001 | cisneros | rifkin  | san jose  | barcelona |
| 3006 | cisneros | rifkin  | san jose  | barcelona |
+------+----------+---------+-----------+-----------+
6 rows in set (0.00 sec)

77. Find all salespeople who have customers with more than one current order.

mysql> select sname from salespeople s join customers c join orders o on s.snum=c.snum and s.snum = o.snum and c.cnum=o.cnum group by o.cnum having count(onum) > 1;
+---------+
| sname   |
+---------+
| axelrod |
| peel    |
| rifkin  |
+---------+
3 rows in set (0.02 sec)

78. Write a query that extracts from the Customers table every customer assigned to a salesperson who currently has at least one other customer (besides the customer being selected) with orders in the Orders table.

mysql> select c.cnum from customers c where c.snum in(select s.snum from orders s where s.cnum != c.cnum group by s.cnum having count(s.onum) >=1);
+------+
| cnum |
+------+
| 2001 |
| 2006 |
| 2003 |
| 2004 |
+------+
4 rows in set (0.00 sec)

79. Write a query that selects all customers whose names begin with ‘C’.

mysql> select cname from customers where cname like 'c%';
+----------+
| cname    |
+----------+
| clemens  |
| cisneros |
+----------+
2 rows in set (0.00 sec)

80. Write a query on the Customers table that will find the highest rating in each city. Put the output in this form : for the city (city) the highest rating is : (rating).

mysql> select city,max(rating) rating from customers group by city;
+----------+--------+
| city     | rating |
+----------+--------+
| berlin   |    300 |
| london   |    100 |
| rome     |    200 |
| san jose |    300 |
+----------+--------+
4 rows in set (0.01 sec)

81. Write a query that will produce the SNUM values of all salespeople with orders currently in the Orders table (without any repeats).

mysql> select s.snum,onum from salespeople s join orders o on s.snum=o.snum group by s.snum;
+------+------+
| snum | onum |
+------+------+
| 1001 | 3003 |
| 1002 | 3005 |
| 1003 | 3007 |
| 1004 | 3002 |
| 1007 | 3001 |
+------+------+
5 rows in set (0.07 sec)

82. Write a query that lists customers in descending order of rating. Output the rating field first, followed by the customer’s names and numbers.

mysql> select rating,cname,cnum from customers order by rating desc;
+--------+----------+------+
| rating | cname    | cnum |
+--------+----------+------+
|    300 | grass    | 2004 |
|    300 | cisneros | 2008 |
|    200 | giovanni | 2002 |
|    200 | liu      | 2003 |
|    100 | hoffman  | 2001 |
|    100 | clemens  | 2006 |
|    100 | pereira  | 2007 |
+--------+----------+------+
7 rows in set (0.00 sec)


83. Find the average commission for salespeople in London.

mysql> select avg(comm) from salespeople where city='london';
+-------------+
| avg(comm)   |
+-------------+
| 0.163333333 |
+-------------+
1 row in set (0.00 sec)

84. Find all orders credited to the same salesperson who services Hoffman (CNUM 2001).

mysql> select onum from orders o join salespeople s on o.snum=s.snum where o.snum= (select c.snum from customers c where c.cnum=2001);
+------+
| onum |
+------+
| 3003 |
| 3008 |
| 3011 |
+------+
3 rows in set (0.00 sec)

85. Find all salespeople whose commission is in between 0.10 and 0.12 (both inclusive).

mysql> select sname,comm from salespeople where comm between 0.10 and 0.12;
+---------+---------+
| sname   | comm    |
+---------+---------+
| peel    | 0.12000 |
| axelrod | 0.10000 |
| motika  | 0.11000 |
+---------+---------+
3 rows in set (0.03 sec)

86. Write a query that will give you the names and cities of all salespeople in London with a commission above 0.10.

mysql> select sname,city from salespeople where city='london' and comm > 0.10;
+--------+--------+
| sname  | city   |
+--------+--------+
| peel   | london |
| motika | london |
| fran   | london |
+--------+--------+
3 rows in set (0.00 sec)

87. What will be the output from the following query?
SELECT * FROM ORDERS where (amt < 1000 OR NOT (odate = '1996-10-03' AND cnum >2003));

mysql> SELECT * FROM ORDERS where (amt < 1000 OR NOT (odate =
'1996-10-03' AND cnum >2003));
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1996-10-03 | 2008 | 1007 |
| 3003 |  767.19 | 1996-10-03 | 2001 | 1001 |
| 3005 | 5160.45 | 1996-10-03 | 2003 | 1002 |
| 3007 |   75.75 | 1996-10-04 | 2002 | 1003 |
| 3008 |    4723 | 1996-10-05 | 2006 | 1001 |
| 3009 | 1713.23 | 1996-10-04 | 2002 | 1003 |
| 3010 | 1309.95 | 1996-10-06 | 2004 | 1002 |
| 3011 | 9891.88 | 1996-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+
8 rows in set (0.00 sec)

88. Write a query that selects each customer’s smallest order.

mysql> select cnum,min(amt) from orders o group by cnum;
+------+------------------+
| cnum | min(amt)         |
+------+------------------+
| 2001 | 767.190002441406 |
| 2002 |            75.75 |
| 2003 |  5160.4501953125 |
| 2004 | 1309.94995117188 |
| 2006 |             4723 |
| 2007 | 1900.09997558594 |
| 2008 | 18.6900005340576 |
+------+------------------+
7 rows in set (0.00 sec)

89. Write a query that selects the first customer in alphabetical order whose name begins with G.

mysql> select cname from customers where cname like 'g%' limit 1;
+----------+
| cname    |
+----------+
| giovanni |
+----------+
1 row in set (0.00 sec)

90. Write a query that counts the number of different nonNULL city values in the Customers table.

mysql> select count(distinct city) from customers where city is not null;
+----------------------+
| count(distinct city) |
+----------------------+
|                    4 |
+----------------------+
1 row in set (0.00 sec)

91. Find the average amount from the Orders table.

mysql> select avg(amt) from orders;
+------------------+
| avg(amt)         |
+------------------+
| 2665.84000225067 |
+------------------+
1 row in set (0.00 sec)

92. What would be the output from the following query?
SELECT * FROM ORDERS WHERE NOT (odate = 10/03/96 OR snum > 1006) AND amt >=1500);

mysql> select * from orders where not(odate ='1996-10-03' or snum > 1006) and amt >= 1500;
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3008 |    4723 | 1996-10-05 | 2006 | 1001 |
| 3009 | 1713.23 | 1996-10-04 | 2002 | 1003 |
| 3011 | 9891.88 | 1996-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+
3 rows in set (0.00 sec)

93. Find all customers who are not located in San Jose and whose rating is above 200.

mysql> select cname from customers where city != 'san jose' and rating > 200;
+-------+
| cname |
+-------+
| grass |
+-------+
1 row in set (0.00 sec)

94. Give a simpler way to write this query :
SELECT snum, sname city, comm FROM salespeople
WHERE (comm > + 0.12 OR comm < 0.14);

mysql> select * from salespeople;
+------+---------+-----------+---------+
| snum | sname   | city      | comm    |
+------+---------+-----------+---------+
| 1001 | peel    | london    | 0.12000 |
| 1002 | serres  | san jose  | 0.13000 |
| 1003 | axelrod | new york  | 0.10000 |
| 1004 | motika  | london    | 0.11000 |
| 1005 | fran    | london    | 0.26000 |
| 1007 | rifkin  | barcelona | 0.15000 |
+------+---------+-----------+---------+
6 rows in set (0.00 sec)


95. Evaluate the following query :
SELECT * FROM orders
WHERE NOT ((odate = 10/03/96 AND snum > 1002) OR amt > 2000.00);

mysql> SELECT * FROM orders WHERE NOT ((odate = 1996-10-03 AND snum > 1002) OR amt > 2000.00);
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1996-10-03 | 2008 | 1007 |
| 3002 |  1900.1 | 1996-10-03 | 2007 | 1004 |
| 3003 |  767.19 | 1996-10-03 | 2001 | 1001 |
| 3006 | 1098.16 | 1996-10-03 | 2008 | 1007 |
| 3007 |   75.75 | 1996-10-04 | 2002 | 1003 |
| 3009 | 1713.23 | 1996-10-04 | 2002 | 1003 |
| 3010 | 1309.95 | 1996-10-06 | 2004 | 1002 |
+------+---------+------------+------+------+
7 rows in set, 1 warning (0.00 sec)

96. Which salespersons attend to customers not in the city they have been assigned to?

mysql> select s.snum,sname
    -> from salespeople s, customers c
    -> where s.snum=c.snum and s.city!=c.city;
+------+---------+
| snum | sname   |
+------+---------+
| 1002 | serres  |
| 1003 | axelrod |
| 1004 | motika  |
| 1007 | rifkin  |
+------+---------+
4 rows in set (0.00 sec)

97. Which salespeople get commission greater than 0.11 are serving customers rated less than 250?

mysql> select distinct s.snum,sname from salespeople s join customers c on s.snum = c.snum where comm > 0.11 and rating < 250;
+------+--------+
| snum | sname  |
+------+--------+
| 1001 | peel   |
| 1002 | serres |
+------+--------+
2 rows in set (0.00 sec)

98. Which salespeople have been assigned to the same city but get different commission percentages?



99. Which salesperson has earned the most by way of commission?

mysql> select max(sum) from (select sum(amt*comm) sum from salespeople s join orders o on o.snum=s.snum group by o.snum) as t;
+------------------+
| max(sum)         |
+------------------+
| 1845.84838623047 |
+------------------+
1 row in set (0.02 sec)

100.Does the customer who has placed the maximum number of orders have the maximum rating?



101.Has the customer who has spent the largest amount of money been given the highest rating?
102.List all customers in descending order of customer rating.
103.On which days has Hoffman placed orders?
104.Do all salespeople have different commissions?
105.Which salespeople have no orders between 10/03/1996 and 10/05/1996?
106.How many salespersons have succeeded in getting orders?
107.How many customers have placed orders?
108.On which date has each salesperson booked an order of maximum value?
109.Who is the most successful salesperson?
110.Who is the worst customer with respect to the company?
111.Are all customers not having placed orders greater than 200 totally been serviced by
salespersons Peel or Serres?
112.Which customers have the same rating?

mysql> select distinct c1.cname,c2.cname from customers c1 join customers c2 on
c1.rating=c2.rating and c1.cnum != c2.cnum;
+----------+----------+
| cname    | cname    |
+----------+----------+
| clemens  | hoffman  |
| pereira  | hoffman  |
| liu      | giovanni |
| giovanni | liu      |
| cisneros | grass    |
| hoffman  | clemens  |
| pereira  | clemens  |
| hoffman  | pereira  |
| clemens  | pereira  |
| grass    | cisneros |
+----------+----------+
10 rows in set (0.00 sec)

113.Find all orders greater than the average for October 4th.
114.Which customers have above average orders?
115.List all customers with ratings above San Jose’s average.
116.Select the total amount in orders for each salesperson for whom the total is greater than the
amount of the largest order in the table.
117.Give names and numbers of all salespersons who have more than one customer.
118.Select all salespersons by name and number who have customers in their city whom they
don’t service.
119.Which customers’ rating should be lowered?
120.Is there a case for assigning a salesperson to Berlin?
121.Is there any evidence linking the performance of a salesperson to the commission that he or
she is being paid?
122.Does the total amount in orders by customer in Rome and London exceed the commission
paid to salespersons in London and New York by more than 5 times?
123.Which is the date, order number, amt and city for each salesperson (by name) for the
maximum order he has obtained?
124.Which salesperson(s) should be fired?
125.What is the total income for the company?








